name: Deploy Spring Boot

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build the Spring Boot Application
        run: |
          chmod +x mvnw
          ./mvnw clean package -DskipTests

      - name: Setup SSH
        run: |
          # Crear el directorio ~/.ssh si no existe
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
      
          # Crear el archivo known_hosts si no existe
          touch ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
      
          # Añadir la clave privada SSH al archivo id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
      
          # Si el servidor es accesible por nombre, lo verificamos con ssh-keyscan
          # Reemplaza `your_server_ip_or_hostname` con la IP real del servidor o su nombre de dominio
          ssh-keyscan -H your_server_ip_or_hostname >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
      
          # Probar la conexión SSH
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa admin_jb_1@your_server_ip_or_hostname "echo 'SSH connection successful'"
      - name: Deploy to Server
        run: |
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            cd ~/springboot-app
            git pull origin main
            mv target/*.jar app.jar
            nohup java -jar app.jar > log.txt 2>&1 &
          EOF
