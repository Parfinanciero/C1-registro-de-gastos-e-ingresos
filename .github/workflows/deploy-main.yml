name: Deploy Spring Boot
on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'  # Añadido cache para mejorar el tiempo de build
      
      - name: Build the Spring Boot Application
        run: |
          chmod +x mvnw
          ./mvnw clean package -DskipTests
      
      - name: Setup SSH and Deploy
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
        run: |
          # Configurar SSH
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
          # Añadir el servidor a known_hosts
          ssh-keyscan -H $SERVER_IP >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
          
          # Copiar el JAR al servidor
          scp target/*.jar $SERVER_USER@$SERVER_IP:~/springboot-app/app.jar
          
          # Ejecutar comandos de despliegue
          ssh $SERVER_USER@$SERVER_IP << 'EOF'
            cd ~/springboot-app
            
            # Detener la aplicación existente si está corriendo
            PID=$(pgrep -f app.jar) || true
            if [ ! -z "$PID" ]; then
              kill $PID
              sleep 5
            fi
            
            # Iniciar la nueva versión
            nohup java -jar app.jar > log.txt 2>&1 &
            
            # Esperar unos segundos y verificar que la aplicación está corriendo
            sleep 10
            if pgrep -f app.jar > /dev/null; then
              echo "Application started successfully"
            else
              echo "Failed to start application"
              exit 1
            fi
          EOF
